/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author riden1862
 */
public class PositivePracticeGUI extends javax.swing.JFrame {

    /**
     * Creates new form PositivePracticeGUI
     */
    public PositivePracticeGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPositivePractice = new javax.swing.JLabel();
        btnQuote = new javax.swing.JButton();
        lblQuoteGenerated = new javax.swing.JLabel();
        lblQuotePrompt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblPositivePractice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblPositivePractice.setText("Positive Practice");

        btnQuote.setText("Generate Quote");
        btnQuote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuoteActionPerformed(evt);
            }
        });

        lblQuoteGenerated.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblQuoteGenerated.setText("Quote Here");

        lblQuotePrompt.setText("Need Some Quotes? Press the button below...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(lblQuotePrompt)
                .addContainerGap(283, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(lblPositivePractice))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(132, 132, 132)
                                .addComponent(btnQuote)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblQuoteGenerated, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(lblPositivePractice)
                .addGap(28, 28, 28)
                .addComponent(lblQuotePrompt)
                .addGap(31, 31, 31)
                .addComponent(btnQuote)
                .addGap(32, 32, 32)
                .addComponent(lblQuoteGenerated)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnQuoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuoteActionPerformed
        // TODO add your handling code here:
        
        int quote;
        quote = (int)Math.round(Math.random()*7+1);
        // when quote is case 1 display the following quote.
        switch(quote){
            case 1:
                lblQuoteGenerated.setText("Everyday is a new page in a 365 page book");
                 }
        //when the quote is case 2 display the quote below.
        switch (quote){
            case 2:
                lblQuoteGenerated.setText("I think you are wonderful member of society!");
                }
        //when math.round(Math.random()) outputs a value of 3, display this quote. 
        switch (quote){
            case 3:
                lblQuoteGenerated.setText("You are like a quadractic function that has a positive a value and a positive k value... no where to go but up!");
        }
        //when the quote is drawn as 4, display this quote
        switch (quote){
            case 4:
                lblQuoteGenerated.setText("You are like number 2... the best prime number of your kind... oh wait it is even...");
        }
        //when the quote is picked as 5, display the quote below
        switch (quote){
            case 5:
                lblQuoteGenerated.setText("You would be the survivor of a William Spakespeare play");
        }
        switch (quote) {
        //when 6 is picked show the following
            case 6:
                lblQuoteGenerated.setText("If someone has ever told you that you are crazy they may be right.... but don't worry! All of the pest people are!");
        }
        //when 7 is the switch case that is picked display the following
        switch (quote) {
            case 7:
                lblQuoteGenerated.setText("Tomorrow us yours to win!");      
        }
        //when 8 is picked display this quote through lblQuoteGenerated 
        switch (quote) {
            case 8:
                lblQuoteGenerated.setText("You are a very nifty person!");
        }
//        if (quote = 1){
//            lblQuoteGenerated.setText("Everyday is a new page in a 365 page book!"); 
//        }
//        else if (quote = 2){
//            lblQuoteGenerated.setText("I think you are wonderful member of society!");
//            
//            else if (quote = 2){
//                    lblQuoteGenerated.setText("You are like a quadractic function that has a positive a value and a positive k value... no where to go but up!");
//                    }
//            else if (quote = 3){
//                    lblQuoteGenerated.setText("You are like number 2... the best prime number of your kind... get it even...");
//                    }
//            else if (quote = 4){
//                    
//                    }
//        }
        
        
        
    }//GEN-LAST:event_btnQuoteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PositivePracticeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PositivePracticeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PositivePracticeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PositivePracticeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PositivePracticeGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnQuote;
    private javax.swing.JLabel lblPositivePractice;
    private javax.swing.JLabel lblQuoteGenerated;
    private javax.swing.JLabel lblQuotePrompt;
    // End of variables declaration//GEN-END:variables
}
